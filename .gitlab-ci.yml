stages:
  - test
  - release

cache:
  key: "$CI_PROJECT_NAME"
  paths:
    - $HOME/.cache/pip

test:
  stage: test
  image: $IMAGE
  script:
    - pip install tox
    - tox -e $TOX_ENVS
  parallel:
    matrix:
      - IMAGE: python:3.7
        TOX_ENVS: py37-django{320}-wagtail{215,300}

      - IMAGE: python:3.8
        TOX_ENVS: py38-django{320}-wagtail{215,300},py38-django{400}-wagtail{300}

      - IMAGE: python:3.9
        TOX_ENVS: py39-django{320}-wagtail{215,300},py39-django{400}-wagtail{300}

      - IMAGE: python:3.10
        TOX_ENVS: py310-django{400}-wagtail{300}

publish_pkg:
  image: python:3.10
  stage: release
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    # Publish to PyPI
    - export TWINE_USERNAME=__token__
    - export TWINE_PASSWORD=${PYPI_TOKEN}
    - python -m twine upload
        --repository-url https://upload.pypi.org/legacy/
        dist/*
    # Publish to Gitlab
    - export TWINE_USERNAME=gitlab-ci-token
    - export TWINE_PASSWORD=${CI_JOB_TOKEN}
    - python -m twine upload
        --repository-url https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
        dist/*

publish_gitlab_release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
  script:
    - echo 'release job'
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG. Tagged by $GITLAB_USER_LOGIN'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
